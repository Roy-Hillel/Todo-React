{"ast":null,"code":"var _jsxFileName = \"/Users/royhillel/Desktop/react-todo/client/src/components/Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport TodoCard from \"./TodoCard\";\nimport axios from \"axios\";\nimport { ListGroup, Container, Row, Col, Button, Alert, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const [todo, setTodo] = useState({});\n  const [todos, setTodos] = useState([]);\n  const [showCompleted, setShowCompleted] = useState(true);\n  console.log(\"inside todo\");\n  useEffect(() => {\n    const fetchCurrentTodos = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:5000/\");\n        // const newTodos = await axios.get(`http://localhost:5000?filter=${filter}`)\n        // setTodos(newTodos.data);\n        console.log(res);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchCurrentTodos();\n  }, []);\n  const handleAddTodo = e => {\n    e.preventDefault();\n    if (todo.content && todo.due) {\n      const newTodo = {\n        ...todo,\n        id: new Date().getTime().toString(),\n        checked: false\n      };\n      setTodos([...todos, newTodo]);\n      setTodo({\n        content: \"\",\n        due: \"\"\n      });\n    } else {\n      alert(\"Must fill fields to add a new todo\");\n    }\n  };\n  const handleTodoChange = e => {\n    e.preventDefault();\n    setTodo({\n      ...todo,\n      [e.target.name]: e.target.value\n    });\n  };\n  const clearTodos = () => {\n    setTodos([]);\n    alert(\"All items cleared\");\n  };\n  const toggleShowCompleted = () => {\n    setShowCompleted(!showCompleted);\n  };\n  const toggleMarkCompleted = id => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          checked: !todo.checked\n        };\n      }\n      return todo;\n    });\n    console.log(id);\n    console.log(updatedTodos);\n    setTodos(updatedTodos);\n  };\n  const removeTodo = id => {\n    setTodos(todos.filter(t => t.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section\",\n    style: {\n      margin: \"2rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your TODO's\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Enter a new Todo : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"content\",\n                id: \"content\",\n                value: todo.content,\n                onChange: handleTodoChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Enter Due Date : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                name: \"due\",\n                id: \"due\",\n                value: todo.due,\n                onChange: handleTodoChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleAddTodo,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginRight: \"0.5rem\"\n        },\n        variant: \"secondary\",\n        onClick: clearTodos,\n        children: \"Clear all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: toggleShowCompleted,\n        children: showCompleted ? \"Hide completed\" : \"Show completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: todos.map(_ref => {\n          let {\n            id,\n            content,\n            due,\n            checked\n          } = _ref;\n          if (showCompleted || !checked) {\n            return /*#__PURE__*/_jsxDEV(TodoCard, {\n              content: content,\n              due: due,\n              checked: checked,\n              toggleMarkCompleted: toggleMarkCompleted,\n              removeTodo: removeTodo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)\n            // <ListGroup.Item key={id}>\n            //   <h2>{content}</h2>\n            //   <div>Due : {due}</div>\n            //   <Alert variant={checked ? \"success\" : \"danger\"}>\n            //     Status : {checked ? \"Completed\" : \"Uncompleted\"}\n            //   </Alert>\n            //   <Button onClick={() => toggleMarkCompleted(id)}>\n            //     {checked ? \"Mark uncomplete\" : \"Mark complete\"}\n            //   </Button>\n            //   <Button onClick={() => removeTodo(id)}>Remove</Button>\n            // </ListGroup.Item>\n            ;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"CrX+dnRvYLbLkZPdNNLgAqerfRg=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useEffect","useState","TodoCard","axios","ListGroup","Container","Row","Col","Button","Alert","Form","jsxDEV","_jsxDEV","Todo","_s","todo","setTodo","todos","setTodos","showCompleted","setShowCompleted","console","log","fetchCurrentTodos","res","get","err","handleAddTodo","e","preventDefault","content","due","newTodo","id","Date","getTime","toString","checked","alert","handleTodoChange","target","name","value","clearTodos","toggleShowCompleted","toggleMarkCompleted","updatedTodos","map","removeTodo","filter","t","className","style","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","Label","Control","type","onChange","variant","onClick","marginRight","_ref","_c","$RefreshReg$"],"sources":["/Users/royhillel/Desktop/react-todo/client/src/components/Todo.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TodoCard from \"./TodoCard\";\nimport axios from \"axios\";\nimport {\n  ListGroup,\n  Container,\n  Row,\n  Col,\n  Button,\n  Alert,\n  Form,\n} from \"react-bootstrap\";\n\nconst Todo = () => {\n  const [todo, setTodo] = useState({});\n  const [todos, setTodos] = useState([]);\n  const [showCompleted, setShowCompleted] = useState(true);\n  console.log(\"inside todo\");\n  useEffect(() => {\n    const fetchCurrentTodos = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:5000/\");\n        // const newTodos = await axios.get(`http://localhost:5000?filter=${filter}`)\n        // setTodos(newTodos.data);\n        console.log(res);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchCurrentTodos();\n  }, []);\n  const handleAddTodo = (e) => {\n    e.preventDefault();\n    if (todo.content && todo.due) {\n      const newTodo = {\n        ...todo,\n        id: new Date().getTime().toString(),\n        checked: false,\n      };\n      setTodos([...todos, newTodo]);\n      setTodo({ content: \"\", due: \"\" });\n    } else {\n      alert(\"Must fill fields to add a new todo\");\n    }\n  };\n\n  const handleTodoChange = (e) => {\n    e.preventDefault();\n    setTodo({ ...todo, [e.target.name]: e.target.value });\n  };\n\n  const clearTodos = () => {\n    setTodos([]);\n    alert(\"All items cleared\");\n  };\n  const toggleShowCompleted = () => {\n    setShowCompleted(!showCompleted);\n  };\n  const toggleMarkCompleted = (id) => {\n    const updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        return { ...todo, checked: !todo.checked };\n      }\n      return todo;\n    });\n    console.log(id);\n    console.log(updatedTodos);\n    setTodos(updatedTodos);\n  };\n  const removeTodo = (id) => {\n    setTodos(todos.filter((t) => t.id !== id));\n  };\n\n  return (\n    <section className=\"section\" style={{ margin: \"2rem\" }}>\n      <Container>\n        <h1>Your TODO's</h1>\n\n        <Form>\n          <Row>\n            <Col>\n              <Form.Group>\n                <Form.Label>Enter a new Todo : </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"content\"\n                  id=\"content\"\n                  value={todo.content}\n                  onChange={handleTodoChange}\n                />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group>\n                <Form.Label>Enter Due Date : </Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  name=\"due\"\n                  id=\"due\"\n                  value={todo.due}\n                  onChange={handleTodoChange}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Button variant=\"primary\" onClick={handleAddTodo}>\n            Add\n          </Button>\n        </Form>\n\n        <Button\n          style={{ marginRight: \"0.5rem\" }}\n          variant=\"secondary\"\n          onClick={clearTodos}\n        >\n          Clear all\n        </Button>\n        <Button variant=\"secondary\" onClick={toggleShowCompleted}>\n          {showCompleted ? \"Hide completed\" : \"Show completed\"}\n        </Button>\n\n        <ListGroup>\n          {todos.map(({ id, content, due, checked }) => {\n            if (showCompleted || !checked) {\n              return (\n                <TodoCard\n                  content={content}\n                  due={due}\n                  checked={checked}\n                  toggleMarkCompleted={toggleMarkCompleted}\n                  removeTodo={removeTodo}\n                />\n                // <ListGroup.Item key={id}>\n                //   <h2>{content}</h2>\n                //   <div>Due : {due}</div>\n                //   <Alert variant={checked ? \"success\" : \"danger\"}>\n                //     Status : {checked ? \"Completed\" : \"Uncompleted\"}\n                //   </Alert>\n                //   <Button onClick={() => toggleMarkCompleted(id)}>\n                //     {checked ? \"Mark uncomplete\" : \"Mark complete\"}\n                //   </Button>\n                //   <Button onClick={() => removeTodo(id)}>Remove</Button>\n                // </ListGroup.Item>\n              );\n            }\n          })}\n        </ListGroup>\n      </Container>\n    </section>\n  );\n};\n\nexport default Todo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}